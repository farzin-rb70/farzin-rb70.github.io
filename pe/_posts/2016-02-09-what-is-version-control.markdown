---
# multilingual page pair id, this must pair with translations of this page. (This name must be unique)
lng_pair: id_autogeneratedsamplecontent_1
title: چرا باید از ورژن کنترل استفاده کرد؟

# post specific
# if not specified, .name will be used from _data/owner/[language].yml
#author: ""
# multiple category is not supported
category: auto generated
# multiple tag entries are possible
tags: [Version Control]
# thumbnail image for post
img: "https://wac-cdn.atlassian.com/dam/jcr:34e935dd-3108-40ef-bb3d-9ed01d977d6d/hero.svg?cdnVersion=la"
# disable comments on this page
comments_disable: true

# publish date
date: 2023-04-13 11:32:53 +0900

# seo
# if not specified, date will be used.
#meta_modify_date: 2021-08-10 11:32:53 +0900
# check the meta_common_description in _data/owner/[language].yml
#meta_description: ""

# optional
# please use the "image_viewer_on" below to enable image viewer for individual pages or posts (_posts/ or [language]/_posts folders).
# image viewer can be enabled or disabled for all posts using the "image_viewer_posts: true" setting in _data/conf/main.yml.
#image_viewer_on: true
# please use the "image_lazy_loader_on" below to enable image lazy loader for individual pages or posts (_posts/ or [language]/_posts folders).
# image lazy loader can be enabled or disabled for all posts using the "image_lazy_loader_posts: true" setting in _data/conf/main.yml.
#image_lazy_loader_on: true
# exclude from on site search
#on_site_search_exclude: true
# exclude from search engines
#search_engine_exclude: true
# to disable this page, simply set published: false or delete this file
published: false
---
![](https://wac-cdn.atlassian.com/dam/jcr:34e935dd-3108-40ef-bb3d-9ed01d977d6d/hero.svg?cdnVersion=la)

## ورژن کنترل چیه؟

خیلی از ما شاید قبل از اینکه با مفهومی از ورژن کنترل اشنا بشیم اونو به صورت خیلی پایه ای در کارهامون استفاده کردیم. به این شکل که هر بار از کارهای دیروزمون یه کپی میگرفتیم و 
بعد تاریخ روز کاریمون رو روی اسم پروژه میذاشتیم و یک تگ مثل fainal برای ورژن ارائه به مشتری اضافه میکردیم.حالا مشکل این کار چی بود؟

1. این حجم از کپی ها فضای زیادی رو توی حافظه میگیره و بعد از یه مدت باید شروع به حذف قبلی ها میکردیم تا کمی فضا برای پروژه های جدید باز بشه. و یا این کار تاریخچه کارمون رو از بین میبردیم.
2. نبود توضیحات که در هر روزی روی اون فایل چه کارهایی انجام شده و اگر میخواستیم به یکی از روزها برگردیم نمیدونستیم با برگشتن به فایل های اون روز چه بخش هایی که روش کار کردیم رو از دست میدیم.
3. همیشه تعداد زیادی فایل باعث سردرگمی میشه و اخرش اشتباهی یکی از فایل های مورد نیاز رو پاک میکنیم.
4. اگر بخوایم دو نفر روی یک فایل کار کنند همیشه باید یکی تغییرات رو به فایل نفر دوم اضافه کنه

و کلی مشکل دیگه که با این نحوه نگهداری تغییرات داریم.

حالا یه بنده خدایی اومده و یه اپلیکیشنی درست کرده که همه ی این مشکلات رو مدیریت کنه. به این اپلیکیشن ها کنترل ورژن میگن و دوتا از معروف ترین اونها Git و SVN هست.

شاید خیلی ها فرض کنن که این دوتا برنامه اختصاصی برنامه نویس هاست ولی نه همه ی کسایی که به نحوی با کامپیوتر سر و کار دارن میتونن از این برنامه ها استفاده کنن و بهره ببرن.
مثلا نویسنده ها یا حتی طراح های گرافیک و ادیتور ها و ...

## چه خدماتی به ما میده؟

به نظرم برای اینکه با قطعیت در مورد خدمات کنترل ورژن حرف بزنم یکی از این برنامه های کنترل نسخه رو انتخاب کنیم مابقی هم با یه سری تفاوت های کوچیک مشابه هستن.
برای من بهترین انتخاب Git هست. چرایی این مسئله رو با یه سرچ کوچیک توی اینترنت میتونید بفهمید :)